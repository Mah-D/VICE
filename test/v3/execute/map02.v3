//@execute 0=2; 1=5; 2=9; 3=14; 4=20; 5=27; 6=35; 7=44; 8=54; 9=65

component map02 {
    field a: Array<int> = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    field b: Array<int> = new Array<int>(10); 

    method main(arg: int) -> int {
	clear();
	map(a, inc, b, arg);
	return sum(b);
    }

    method inc(a: int) -> int {
	return a + 1;
    }

    // recursive version of map
    method map(a: Array<int>, f: int -> int, res: Array<int>, m: int) {
        if ( m > 0 ) map(a, f, res, m-1);
        res(m) = f(a(m));
    }

    method clear() {
	local i = 0;
	while (i < b.length) {
		b(i) = 0;
		i = i + 1;
	}
    }

    method sum(array: Array<int>) -> int {
	local i = 0, cumul = 0;
	while (i < array.length) {
		cumul = cumul + array(i);
		i = i + 1;
	}
	return cumul;
    }
}
