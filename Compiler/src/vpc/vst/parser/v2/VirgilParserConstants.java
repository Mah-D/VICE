/* Generated By:JavaCC: Do not edit this line. VirgilParserConstants.java */
package vpc.vst.parser.v2;

public interface VirgilParserConstants {

  int EOF = 0;
  int SINGLE_LINE_COMMENT = 9;
  int FORMAL_COMMENT = 10;
  int MULTI_LINE_COMMENT = 11;
  int KW_AND = 13;
  int KW_BREAK = 14;
  int KW_CASE = 15;
  int KW_CLASS = 16;
  int KW_COMPONENT = 17;
  int KW_CONSTRUCTOR = 18;
  int KW_CONTINUE = 19;
  int KW_DEFAULT = 20;
  int KW_DO = 21;
  int KW_ELSE = 22;
  int KW_EXTENDS = 23;
  int KW_FIELD = 24;
  int KW_FOR = 25;
  int KW_FUNCTION = 26;
  int KW_GET = 27;
  int KW_IF = 28;
  int KW_INSTANCEOF = 29;
  int KW_LOCAL = 30;
  int KW_METHOD = 31;
  int KW_NEW = 32;
  int KW_OR = 33;
  int KW_PRIVATE = 34;
  int KW_RETURN = 35;
  int KW_SUPER = 36;
  int KW_SWITCH = 37;
  int KW_THIS = 38;
  int KW_WHILE = 39;
  int KW_PROGRAM = 40;
  int KW_SET = 41;
  int KW_TRY = 42;
  int KW_MODULE = 43;
  int KW_ENTRYPOINT = 44;
  int KW_COMPONENTS = 45;
  int KW_FALSE = 46;
  int KW_TRUE = 47;
  int KW_NULL = 48;
  int ZERO_LITERAL = 49;
  int DECIMAL_LITERAL = 50;
  int HEX_LITERAL = 51;
  int BIN_LITERAL = 52;
  int OCTAL_LITERAL = 53;
  int CHARACTER_LITERAL = 54;
  int STRING_LITERAL = 55;
  int IDENTIFIER = 56;
  int LETTER = 57;
  int DIGIT = 58;
  int TK_LPAREN = 59;
  int TK_RPAREN = 60;
  int TK_LBRACE = 61;
  int TK_RBRACE = 62;
  int TK_LBRACKET = 63;
  int TK_RBRACKET = 64;
  int TK_SEMI = 65;
  int TK_COMMA = 66;
  int TK_DOT = 67;
  int TK_ASSIGN = 68;
  int TK_LT = 69;
  int TK_GT = 70;
  int TK_LTEQ = 71;
  int TK_GTEQ = 72;
  int TK_NOT = 73;
  int TK_COMPL = 74;
  int TK_COLON = 75;
  int TK_TYPE_QUERY = 76;
  int TK_TYPE_CAST = 77;
  int TK_EQ = 78;
  int TK_INCDEC = 79;
  int TK_PLUS = 80;
  int TK_MINUS = 81;
  int TK_MUL = 82;
  int TK_AND = 83;
  int TK_OR = 84;
  int TK_XOR = 85;
  int TK_SHIFT = 86;
  int TK_HASH = 87;
  int TK_CASSIGN = 88;

  int DEFAULT = 0;
  int IN_SINGLE_LINE_COMMENT = 1;
  int IN_FORMAL_COMMENT = 2;
  int IN_MULTI_LINE_COMMENT = 3;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"//\"",
    "<token of kind 7>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 12>",
    "\"and\"",
    "\"break\"",
    "\"case\"",
    "\"class\"",
    "\"component\"",
    "\"constructor\"",
    "\"continue\"",
    "\"default\"",
    "\"do\"",
    "\"else\"",
    "\"extends\"",
    "\"field\"",
    "\"for\"",
    "\"function\"",
    "\"get\"",
    "\"if\"",
    "\"instanceof\"",
    "\"local\"",
    "\"method\"",
    "\"new\"",
    "\"or\"",
    "\"private\"",
    "\"return\"",
    "\"super\"",
    "\"switch\"",
    "\"this\"",
    "\"while\"",
    "\"program\"",
    "\"set\"",
    "\"try\"",
    "\"module\"",
    "\"entrypoint\"",
    "\"components\"",
    "\"false\"",
    "\"true\"",
    "\"null\"",
    "\"0\"",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<BIN_LITERAL>",
    "<OCTAL_LITERAL>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"!\"",
    "\"~\"",
    "\":\"",
    "\"<:\"",
    "\"::\"",
    "<TK_EQ>",
    "<TK_INCDEC>",
    "\"+\"",
    "\"-\"",
    "<TK_MUL>",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "<TK_SHIFT>",
    "\"#\"",
    "<TK_CASSIGN>",
    "\"?\"",
  };

}
